{"ast":null,"code":"import _slicedToArray from\"/home/dlaloush/dev/dweb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState,useRef}from'react';import{useSelector}from'react-redux';import{Loading}from'../components';function useInterval(callback,delay){var savedCallback=useRef();useEffect(function(){savedCallback.current=callback;},[callback]);useEffect(function(){function tick(){savedCallback.current();}if(delay!==null){var id=setInterval(tick,delay);return function(){return clearInterval(id);};}return null;},[delay]);}export default(function(){var items=useSelector(function(state){return state.loadingItems;});var _useState=useState(false),_useState2=_slicedToArray(_useState,2),time=_useState2[0],setTime=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),closePage=_useState4[0],setClosePage=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),loaded=_useState6[0],setloaded=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),init=_useState8[0],setInit=_useState8[1];var startTimer=function startTimer(){setTime(true);setInit(1);if(init===1&&loaded){setClosePage(true);setInit(2);}};useInterval(function(){startTimer();},1000);if(items===0&&!loaded){setloaded(true);}if(loaded&&closePage){return null;}return/*#__PURE__*/React.createElement(Loading,{time:time,loaded:loaded});});","map":{"version":3,"sources":["/home/dlaloush/dev/dweb/src/pages/Loading.jsx"],"names":["React","useEffect","useState","useRef","useSelector","Loading","useInterval","callback","delay","savedCallback","current","tick","id","setInterval","clearInterval","items","state","loadingItems","time","setTime","closePage","setClosePage","loaded","setloaded","init","setInit","startTimer"],"mappings":"8IAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,CAAqCC,MAArC,KAAmD,OAAnD,CACA,OAASC,WAAT,KAA4B,aAA5B,CAEA,OAASC,OAAT,KAAwB,eAAxB,CAEA,QAASC,CAAAA,WAAT,CAAqBC,QAArB,CAA+BC,KAA/B,CAAsC,CACpC,GAAMC,CAAAA,aAAa,CAAGN,MAAM,EAA5B,CAEAF,SAAS,CAAC,UAAM,CACdQ,aAAa,CAACC,OAAd,CAAwBH,QAAxB,CACD,CAFQ,CAEN,CAACA,QAAD,CAFM,CAAT,CAIAN,SAAS,CAAC,UAAM,CACd,QAASU,CAAAA,IAAT,EAAgB,CACdF,aAAa,CAACC,OAAd,GACD,CACD,GAAIF,KAAK,GAAK,IAAd,CAAoB,CAClB,GAAMI,CAAAA,EAAE,CAAGC,WAAW,CAACF,IAAD,CAAOH,KAAP,CAAtB,CACA,MAAO,kBAAMM,CAAAA,aAAa,CAACF,EAAD,CAAnB,EAAP,CACD,CACD,MAAO,KAAP,CACD,CATQ,CASN,CAACJ,KAAD,CATM,CAAT,CAUD,CAED,eAAe,UAAM,CACnB,GAAMO,CAAAA,KAAK,CAAGX,WAAW,CAAC,SAACY,KAAD,QAAWA,CAAAA,KAAK,CAACC,YAAjB,EAAD,CAAzB,CADmB,cAEKf,QAAQ,CAAC,KAAD,CAFb,wCAEZgB,IAFY,eAENC,OAFM,8BAGejB,QAAQ,CAAC,KAAD,CAHvB,yCAGZkB,SAHY,eAGDC,YAHC,8BAISnB,QAAQ,CAAC,KAAD,CAJjB,yCAIZoB,MAJY,eAIJC,SAJI,8BAKKrB,QAAQ,CAAC,CAAD,CALb,yCAKZsB,IALY,eAKNC,OALM,eAOnB,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvBP,OAAO,CAAC,IAAD,CAAP,CACAM,OAAO,CAAC,CAAD,CAAP,CACA,GAAID,IAAI,GAAK,CAAT,EAAcF,MAAlB,CAA0B,CACxBD,YAAY,CAAC,IAAD,CAAZ,CACAI,OAAO,CAAC,CAAD,CAAP,CACD,CACF,CAPD,CASAnB,WAAW,CAAC,UAAM,CAChBoB,UAAU,GACX,CAFU,CAER,IAFQ,CAAX,CAIA,GAAIX,KAAK,GAAK,CAAV,EAAe,CAACO,MAApB,CAA4B,CAC1BC,SAAS,CAAC,IAAD,CAAT,CACD,CAED,GAAID,MAAM,EAAIF,SAAd,CAAyB,CACvB,MAAO,KAAP,CACD,CAED,mBACE,oBAAC,OAAD,EAAS,IAAI,CAAEF,IAAf,CAAqB,MAAM,CAAEI,MAA7B,EADF,CAGD,CA/BD","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { Loading } from '../components';\n\nfunction useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n    return null;\n  }, [delay]);\n}\n\nexport default () => {\n  const items = useSelector((state) => state.loadingItems);\n  const [time, setTime] = useState(false);\n  const [closePage, setClosePage] = useState(false);\n  const [loaded, setloaded] = useState(false);\n  const [init, setInit] = useState(0);\n\n  const startTimer = () => {\n    setTime(true);\n    setInit(1);\n    if (init === 1 && loaded) {\n      setClosePage(true);\n      setInit(2);\n    }\n  };\n\n  useInterval(() => {\n    startTimer();\n  }, 1000);\n\n  if (items === 0 && !loaded) {\n    setloaded(true);\n  }\n\n  if (loaded && closePage) {\n    return null;\n  }\n\n  return (\n    <Loading time={time} loaded={loaded} />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}